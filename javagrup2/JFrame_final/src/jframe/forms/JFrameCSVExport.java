/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package jframe.forms;

import java.io.FileWriter;
import jframe.classes.Alumne;
import jframe.classes.Grup;
import jframe.classes.LlistaAlumnes;
import jframe.classes.LlistaGrups;
import jframe.classes.LlistaMatricules;
import jframe.classes.LlistaProfessor;
import jframe.classes.Matricula;
import jframe.classes.Professor;
import static jframe.forms.JFrameProfessors.ll_p;

/**
 *
 * @author alumne
 */
public class JFrameCSVExport extends javax.swing.JFrame {

    public static LlistaMatricules ll_m;
    public static LlistaAlumnes ll_a;
    public static LlistaGrups ll_g;
    public static LlistaProfessor ll_p;
    public static int tipusDades;
    public static String [] llistaExport;
    
    
    /**
     * Creates new form JFrameCSVExport
     */
    public JFrameCSVExport() {
        initComponents();
    }
    
    public JFrameCSVExport(LlistaMatricules llista_m, LlistaAlumnes llista_a, LlistaGrups llista_g, LlistaProfessor llista_p, int tipusDades) {
        this.ll_a = llista_a;
        this.ll_m = llista_m;
        this.ll_g = llista_g;
        this.ll_p = llista_p;
        this.tipusDades = tipusDades;

        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        botoAfegir1 = new javax.swing.JButton();
        botoTornar1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        textNomFitxer = new javax.swing.JTextField();
        botoAfegir2 = new javax.swing.JButton();
        botoTornar2 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        botoAfegir1.setText("Acceptar");
        botoAfegir1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botoAfegir1ActionPerformed(evt);
            }
        });

        botoTornar1.setText("Cancel·lar");
        botoTornar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botoTornar1ActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Introdueix el nom del fitxer on s'exportarà");

        textNomFitxer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textNomFitxerActionPerformed(evt);
            }
        });

        botoAfegir2.setText("Acceptar");
        botoAfegir2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botoAfegir2ActionPerformed(evt);
            }
        });

        botoTornar2.setText("Cancel·lar");
        botoTornar2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botoTornar2ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 30)); // NOI18N
        jLabel2.setText("Exportar a .csv");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(131, 131, 131)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(botoTornar2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(botoAfegir2, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(83, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(textNomFitxer)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(80, 80, 80))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(104, 104, 104))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(textNomFitxer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                .addComponent(botoAfegir2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(botoTornar2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void textNomFitxerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textNomFitxerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textNomFitxerActionPerformed

    private void botoAfegir1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botoAfegir1ActionPerformed

    }//GEN-LAST:event_botoAfegir1ActionPerformed

    private void botoTornar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botoTornar1ActionPerformed

    }//GEN-LAST:event_botoTornar1ActionPerformed

    private void botoAfegir2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botoAfegir2ActionPerformed

        String nomFitxerFinal = textNomFitxer.getText();
        switch (tipusDades) {
                    // Cas Professors
                    case 0:
                        try {
                            
                            // Instanciar writer
                            FileWriter writer = new FileWriter("/home/alumne/" + nomFitxerFinal + ".csv");
                            
                            // Encapçalament de la taula i afegir-ho al writer.
                            String x = "ID,Nom,Cognom,Email,DNI,Data naixement,Data d'alta,Escola,Departament,Salari,Data de baixa,Estat";
                            writer.append(x);
                            writer.append("\n");
                            
                            // Agafar contingut de tota la llista de Professors, passar-ho a String i afegir-ho al writer.
                            for (int i = 0; i < ll_p.getNumProfessorsActuals(); i++) {
                                Professor p = ll_p.returnList()[i];
                                x = p.toStringComes();
                                writer.append(x);
                                writer.append("\n");
                            }
                            // Tanquem el writer
                            writer.flush();
                            writer.close();

                        } catch (Exception e) {
                        }
                    break;
                    
                    // Cas Grups
                    case 1:
                        try {
                            
                            // Instanciar writer
                            FileWriter writer = new FileWriter("/home/alumne/" + nomFitxerFinal + ".csv");
                            
                            // Encapçalament de la taula i afegir-ho al writer.
                            String x = "#,Nom curt,Nom,Familia professional";
                            writer.append(x);
                            writer.append("\n");
                            
                            // Agafar contingut de tota la llista de Professors, passar-ho a String i afegir-ho al writer.
                            for (int i = 0; i < ll_g.getNumGrupsActuals(); i++) {
                                Grup g = ll_g.returnList()[i];
                                x = g.toStringComes();
                                writer.append(Integer.toString(g.getId()) + ",");
                                writer.append(x);
                                writer.append("\n");
                            }
                            // Tanquem el writer
                            writer.flush();
                            writer.close();

                        } catch (Exception e) {
                        }
                    break;
                    
                    // Cas Matrícula
                    case 2:
                        try {
                            
                            // Instanciar writer
                            FileWriter writer = new FileWriter("/home/alumne/" + nomFitxerFinal + ".csv");
                            
                            // Encapçalament de la taula i afegir-ho al writer.
                            String x = "ID,Institut,Usuari,Grup,Data Alta,Data Baixa,Estat";
                            writer.append(x);
                            writer.append("\n");
                            
                            // Agafar contingut de tota la llista de Matricules, passar-ho a String i afegir-ho al writer.
                            for (int i = 0; i < ll_m.getComptadorMatricules(); i++) {
                                Matricula m = ll_m.returnList()[i];
                                x = m.toStringComes();
                                writer.append(x);
                                writer.append("\n");
                            }
                            // Tanquem el writer
                            writer.flush();
                            writer.close();

                        } catch (Exception e) {
                        }
                    break;
                    
                    // Cas Alumnes
                    case 3:
                        try {
                            
                            // Instanciar writer
                            FileWriter writer = new FileWriter("/home/alumne/" + nomFitxerFinal + ".csv");
                            
                            // Encapçalament de la taula i afegir-ho al writer.
                            String x = "ID,Nom,Cognom,DNI,Email,Data naixement,Centre,Estat";
                            writer.append(x);
                            writer.append("\n");
                            
                            // Agafar contingut de tota la llista de Alumnes, passar-ho a String i afegir-ho al writer.
                            for (int i = 0; i < ll_a.getComptadorAlumnes(); i++) {
                                Alumne a = ll_a.returnList()[i];
                                x = a.toStringComes();
                                writer.append(Integer.toString(a.getId()) + ",");
                                writer.append(x);
                                writer.append("\n");
                            }
                            // Tanquem el writer
                            writer.flush();
                            writer.close();

                        } catch (Exception e) {
                        }
                    break;
                     
                    default: 
                        System.out.println("Tipus de dada Incorrecta");
                        
                    break;
                }
        
        this.setVisible(false);
        JFrameMenuPrincipal fll = new JFrameMenuPrincipal(ll_m, ll_a, ll_g, ll_p);
        fll.setVisible(true);
        fll.setTitle("Gestió d'instituts");
        fll.setLocationRelativeTo(null);
        dispose();
        
    }//GEN-LAST:event_botoAfegir2ActionPerformed
    
    private void botoTornar2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botoTornar2ActionPerformed

        this.setVisible(false);
        JFrameMenuPrincipal fll = new JFrameMenuPrincipal(ll_m, ll_a, ll_g, ll_p);
        fll.setVisible(true);
        fll.setTitle("Gestió d'instituts");
        fll.setLocationRelativeTo(null);
        dispose();

    }//GEN-LAST:event_botoTornar2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFrameCSVExport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFrameCSVExport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFrameCSVExport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFrameCSVExport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFrameCSVExport().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botoAfegir1;
    private javax.swing.JButton botoAfegir2;
    private javax.swing.JButton botoTornar1;
    private javax.swing.JButton botoTornar2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField textNomFitxer;
    // End of variables declaration//GEN-END:variables
}
