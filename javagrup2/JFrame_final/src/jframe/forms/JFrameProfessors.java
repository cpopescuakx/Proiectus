package jframe.forms;

import jframe.forms.modificar.JFrameModificarProfessors;
import jframe.forms.alta.JFrameAltaProfessors;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JDialog;
import javax.swing.table.DefaultTableModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.TableCellRenderer;
import jframe.classes.LlistaAlumnes;
import jframe.classes.LlistaGrups;
import jframe.classes.LlistaMatricules;
import jframe.classes.LlistaProfessor;
import jframe.classes.Professor;
import jframe.principal.Main;

import java.io.IOException;
import java.util.logging.FileHandler;
import java.util.logging.Level;
import java.util.logging.Logger;

public class JFrameProfessors extends javax.swing.JFrame {



    public static LlistaMatricules ll_m;
    public static LlistaAlumnes ll_a;
    public static LlistaGrups ll_g;
    public static LlistaProfessor ll_p;
    /**
     * Creates new form NewJFrame
     */
    private int selectedItem = -1;

    public JFrameProfessors(LlistaMatricules llista_m, LlistaAlumnes llista_a, LlistaGrups llista_g, LlistaProfessor llista_p) {
        this.ll_a = llista_a;
        this.ll_m = llista_m;
        this.ll_g = llista_g;
        this.ll_p = llista_p;
        this.setTitle("Administració de Professors");

        initComponents();
        this.setLocationRelativeTo(null);
        emplenarTaula("");

    }

    //Mètode per a emplenar la taula de dades
    public void emplenarTaula(String s) {
        Object columnNames[] = {"ID", "Nom", "Cognom", "Email", "DNI", "Data naixement", "Data d'alta", "Escola", "Departament", "Salari", "Data de baixa", "Estat"};
        DefaultTableModel model = new DefaultTableModel(columnNames, 0);

        LlistaProfessor consulta = ll_p.consulta(s);

        for (int i = 0; i < consulta.getNumProfessorsActuals(); i++) {
            Professor p = consulta.returnList()[i];
            Object rowData[] = {p.getID(), p.getNom(), p.getCognom(), p.getEmail(), p.getDni(), p.getData_naixement(), p.getData_alta(), p.getEscola(), p.getDepartament(), p.getSalari(), p.getData_baixa(), p.getEstat()};
            model.addRow(rowData);
        }
        Taula.setModel(model);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        botoBaixa = new javax.swing.JButton();
        botoModificar = new javax.swing.JButton();
        SearchProfessors = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        botoSortir = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        Taula = new javax.swing.JTable();
        AfegirProfessor = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        botoBaixa.setText("Baixa");
        botoBaixa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                botoBaixaMouseClicked(evt);
            }
        });

        botoModificar.setText("Modificar");
        botoModificar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                botoModificarMouseClicked(evt);
            }
        });

        SearchProfessors.setText("Search...");
        SearchProfessors.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                SearchProfessorsFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                SearchProfessorsFocusLost(evt);
            }
        });
        SearchProfessors.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchProfessorsActionPerformed(evt);
            }
        });
        SearchProfessors.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                SearchProfessorsKeyTyped(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Mukti Narrow", 0, 30)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Professors");

        botoSortir.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        botoSortir.setText("Menu Principal");
        botoSortir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botoSortirActionPerformed(evt);
            }
        });

        Taula.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        Taula.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TaulaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(Taula);

        AfegirProfessor.setText("Alta");
        AfegirProfessor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AfegirProfessorMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(73, 73, 73)
                .addComponent(botoSortir, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(306, 306, 306)
                .addComponent(SearchProfessors, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(86, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1194, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(AfegirProfessor, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(483, 483, 483)
                        .addComponent(botoBaixa, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(475, 475, 475)
                        .addComponent(botoModificar)))
                .addGap(76, 76, 76))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(SearchProfessors, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(botoSortir))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jLabel1)))
                .addGap(89, 89, 89)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botoBaixa)
                    .addComponent(botoModificar)
                    .addComponent(AfegirProfessor))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(102, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    //Botó per a tornar al menú principal
    private void botoSortirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botoSortirActionPerformed
        //Redireccionem al menu principal
        JFrameMenuPrincipal m = new JFrameMenuPrincipal(ll_m, ll_a, ll_g, ll_p);
        m.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_botoSortirActionPerformed

    private void SearchProfessorsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchProfessorsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SearchProfessorsActionPerformed

//Event per a borrar Search... quan hi cliquem a sobre
    private void SearchProfessorsFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_SearchProfessorsFocusGained
        SearchProfessors.setText("");
    }//GEN-LAST:event_SearchProfessorsFocusGained

//Event per a escriure Search... quan el camp de buscar perd el focus
    private void SearchProfessorsFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_SearchProfessorsFocusLost
        SearchProfessors.setText("Search...");
    }//GEN-LAST:event_SearchProfessorsFocusLost

//Event per a canviar a la finestra per a afegir un professor
    private void AfegirProfessorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AfegirProfessorMouseClicked
        JFrameAltaProfessors a = new JFrameAltaProfessors(ll_m, ll_a, ll_g, ll_p);
        a.setVisible(true);

        this.setVisible(false);

    }//GEN-LAST:event_AfegirProfessorMouseClicked

//Event que agafa el que escrivim al camp per a buscar professors
    private void SearchProfessorsKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_SearchProfessorsKeyTyped
        emplenarTaula(SearchProfessors.getText());
    }//GEN-LAST:event_SearchProfessorsKeyTyped

//Event per a donar de baixa un professor
    private void botoBaixaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botoBaixaMouseClicked

        if (selectedItem != -1) {
            //Mostrar missatge de confirmació
            int conf = JOptionPane.showConfirmDialog(this,
                    "Esteu segurs de donar de baixa aquest professor?",
                    "Confirmar",
                    JOptionPane.YES_NO_OPTION);

            //Codi que s'executa quan l'opció és afirmativa
            if (conf == JOptionPane.YES_OPTION) {
                ll_p.baixaProfessor(selectedItem);
                emplenarTaula("");
                selectedItem = -1;
            }

        } else {
            //Missatge d'alerta que s'executa quan no seleccionem cap professor
            JOptionPane.showMessageDialog(this, "Per a realitzar aquesta acció, heu d'escollir un professor de la taula!", "Error", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_botoBaixaMouseClicked

//Event que agafa el professor que seleccionem
    private void TaulaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TaulaMouseClicked
        selectedItem = ((int) Taula.getValueAt(Taula.getSelectedRow(), 0)) - 1;
    }//GEN-LAST:event_TaulaMouseClicked

//Event per a modificar un professor
        private void botoModificarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botoModificarMouseClicked
            if (selectedItem != -1) {
                //Missatge de confirmació per a modificar el professor seleccionat
                int conf = JOptionPane.showConfirmDialog(this,
                        "Esteu segurs de modificar les dades d'aquest professor?",
                        "Confirmar",
                        JOptionPane.YES_NO_OPTION);

                //Codi que s'executa quan l'opció és afirmativa
                if (conf == JOptionPane.YES_OPTION) {
                    JFrameModificarProfessors m = new JFrameModificarProfessors(ll_m, ll_a, ll_g, ll_p, selectedItem);
                    m.setVisible(true);
                    this.setVisible(false);
                    selectedItem = -1;
                }

            } else {
                //Missatge que es mostra quan no hi ha cap professor seleccionat
                JOptionPane.showMessageDialog(this, "Per a realitzar aquesta acció, heu d'escollir un professor de la taula!", "Error", JOptionPane.WARNING_MESSAGE);
            }

        }//GEN-LAST:event_botoModificarMouseClicked



    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {


        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }

            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFrameProfessors.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFrameProfessors.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFrameProfessors.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFrameProfessors.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new JFrameProfessors(ll_m, ll_a, ll_g, ll_p).setVisible(true);

        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AfegirProfessor;
    private javax.swing.JTextField SearchProfessors;
    private static javax.swing.JTable Taula;
    private javax.swing.JButton botoBaixa;
    private javax.swing.JButton botoModificar;
    private javax.swing.JButton botoSortir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
